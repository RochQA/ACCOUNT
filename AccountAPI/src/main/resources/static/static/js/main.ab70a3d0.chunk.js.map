{"version":3,"sources":["logo.svg","Account.js","Home.js","LoggedView.js","CreateAccount.js","UnLoggedView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Account","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setStates","event","setState","defineProperty","target","name","value","logOut","deleteUser","axios","delete","concat","state","id","console","log","user","userID","react_default","a","createElement","onClick","accountName","accountNumber","prize","Component","Home","className","LoggedView","loggedIN","_this2","react_router_dom","to","react_router","exact","path","component","render","src_Account","pushRequest","pass","rpassword","newUser","accountname","namein","password","post","account","message","handleSubmit","preventDefault","accountnumber","onSubmit","type","onChange","placeholder","UnLoggedView","CreateAccount","App","logIn","iD","get","then","res","data","src_LoggedView","src_UnLoggedView","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab70a3d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nclass Account extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      user: this.props.user,\r\n      id: this.props.userID,\r\n      user: this.props.user\r\n     }\r\n  }\r\n  setStates = (event)=>{\r\n    this.setState({[event.target.name]:event.target.value});\r\n  }\r\n  logOut=()=>{\r\n    this.props.logOut();\r\n  }\r\n  deleteUser = ()=>{\r\n    axios.delete(`deleteAccount/${this.state.id}`);\r\n    console.log('userRemoved' + (this.state.id));\r\n    this.logOut();\r\n  }\r\n  render(props) {\r\n    return (\r\n    <div>\r\n      <button onClick={this.logOut}>LOGOUT</button>\r\n      <strong>Your Account:</strong>\r\n      <br/>\r\n      UserName: {this.state.user.accountName}<br/>\r\n      AccountNumber: {this.state.user.accountNumber}<br/>\r\n      Prize: {this.state.user.prize}<br/>\r\n      <button onClick={this.deleteUser}>Delete Account</button>\r\n    </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Account;","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <h1 className=\"welcome\">Welcome to some bank</h1>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport Account from './Account';\r\nimport Home from './Home';\r\n\r\nclass LoggedView extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loggedIN:false,\r\n      userID: this.props.userID,\r\n      user: this.props.user\r\n    }\r\n  }\r\n  logOut=()=>{\r\n    this.props.logOut()\r\n  }\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n      <div className=\"App\">\r\n      <nav>\r\n        <ul>\r\n        <li><NavLink to=\"/\"><a>HOME</a></NavLink></li>\r\n        <li><NavLink to=\"/account\"><a>ACCOUNT</a></NavLink></li>\r\n        </ul>\r\n        </nav>\r\n        <div className=\"content\">\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route path=\"/account\" render={() => <Account userID={this.state.userID} logOut={this.logOut} user={this.state.user}/>}/>\r\n            <Route path=\"/create\" render={() => <Account userID={this.state.userID} logOut={this.logOut} user={this.state.user}/>}/>\r\n        </div>\r\n      </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoggedView;","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport axios from 'axios';\r\n\r\nclass Account extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      user:{\r\n        accountname: '',\r\n        accountnumber: '',\r\n        password:'',\r\n        prize:''\r\n    },\r\n      namein:'',\r\n      pass:'',\r\n      rpassword:'',\r\n      message:''\r\n     }\r\n  }\r\n  setStates = (event)=>{\r\n    this.setState({[event.target.name]:event.target.value});\r\n  }\r\n  pushRequest = ()=>{\r\n    \r\n    if(this.state.pass===this.state.rpassword){\r\n      const newUser = this.state.user;\r\n      newUser.accountname = this.state.namein;\r\n      newUser.password = this.state.pass;\r\n      console.log('Name: '+ this.state.user.accountname);\r\n      axios.post(`/createAccount`, {account: this.state.user});\r\n      this.setState({message:\"UserCreated\"});\r\n    }else{this.setState({message: 'Passwords do not match!'});}\r\n  }\r\n  handleSubmit=(event)=>{\r\n    console.log('Name: '+ this.state.namein);\r\n    console.log('Pass: '+ this.state.pass);\r\n    console.log('RPass: '+ this.state.rpassword);\r\n    event.preventDefault();\r\n  }\r\n  setStates = (event)=>{\r\n    this.setState({[event.target.name]:event.target.value});\r\n  }\r\n  render(props) {\r\n    return (\r\n    <form onSubmit={this.handleSubmit} className=\"form-inline\">\r\n      <h2><strong>Sign Up</strong></h2><br/>\r\n      UserName: <input type=\"text\" name=\"namein\" target='one' className=\"box\" onChange={this.setStates} namein={this.state.namein} id=\"Name\" placeholder=\"Name\"/><br/>\r\n      Password: <input type=\"text\" name=\"pass\" target='two' className=\"box\" onChange={this.setStates} pass={this.state.pass} id=\"Password\" placeholder=\"Password\"/><br/>\r\n      Re-Enter Password: <input name=\"rpassword\" type=\"text\"target='three' className=\"box\" onChange={this.setStates} rpassword={this.state.rpassword} id=\"ReEnterPassword\" placeholder=\"Re-Enter Password\"></input><br/>\r\n      <input type=\"submit\" value=\"Submit\" onClick={this.pushRequest}/>\r\n      <h2>{this.state.message}</h2>\r\n    </form>\r\n    );\r\n  }\r\n}\r\nexport default Account;","import React, { Component } from 'react';\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport CreateAccount from './CreateAccount';\r\nimport Home from './Home';\r\n\r\n\r\nclass UnLoggedView extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      \r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n      <div className=\"App\">\r\n      <nav>\r\n        <ul>\r\n        <li><NavLink to=\"/\">HOME</NavLink></li>\r\n        <li><NavLink to=\"/create\">CREATE ACCOUNT</NavLink></li>\r\n        </ul>\r\n        </nav>\r\n        <div className=\"content\">\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route path=\"/account\" render={() => <CreateAccount/>}/>\r\n            <Route path=\"/create\" render={() => <CreateAccount/>}/>\r\n        </div>\r\n      </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UnLoggedView;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport LoggedView from './LoggedView';\nimport UnLoggedView from './UnLoggedView';\n\nclass App extends Component {\nconstructor(props){\n    super(props);\n    this.state = {\n      loggedIN:false,\n      userID:null,\n      user: {\n        accountName: null,\n        accountNumber: null,\n        prize:null\n      }\n    }\n  }\n  logIn=(iD)=>{\n    this.setState({userID :iD});\n    console.log(this.state.userID);\n    axios.get(`/getAccount/${this.state.user}`)\n    .then(res => {\n      this.setState({user: res.data});\n    });\n    this.setState({loggedIN : true});\n    \n  }\n  logOut= ()=>{ \n    this.setState({userID:null});\n    this.setState({user:null})\n    this.setState({loggedIN:false});\n  }\n  render() {\n    \n    if(!this.state.loggedIN){\n    return (\n      <UnLoggedView logIn={this.logIn}/>\n    );}\n    else if(this.state.loggedIN){\n      return(\n      <LoggedView userID={this.state.userID} logOut={this.logOut} user={this.state.user}/>\n    );}\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}